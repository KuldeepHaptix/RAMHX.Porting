@using Microsoft.AspNetCore.Identity
@using System.Security.Claims;
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@if (SignInManager.IsSignedIn(this.User))
{
    using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm", @class = "navbar-right" }))
    {
        @Html.AntiForgeryToken()

        <ul class="nav navbar-nav navbar-right">
            <li>
                <a href="#">@UserManager.GetUserName(User)</a>

                @*@Html.ActionLink("Hello " + User.Identity.GetUserName() + "!", "Manage", "Account", routeValues: null, htmlAttributes: new { title = "Manage" })*@
            </li>
            <li>
                <a href="/Admin/Account/Manage?id=@UserManager.GetUserId(this.User).ToString()" title="Reset Password"><i class="fa fa-key fa-1x"></i></a>
            </li>
            <li><form asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })" method="post" id="logoutForm"><button type="submit" class="btn btn-link navbar-btn navbar-link" style="color:white;"><i class="fa fa-power-off fa-1x"></i></button></form>
            
            <a href="/Admin/Account/LogOff" title="Log off"><i class="fa fa-power-off fa-1x"></i></a></li>
        </ul>
    }
}
else
{
    <ul class="nav navbar-nav navbar-right">
        @*<li>@Html.ActionLink("Register", "Register", "Account", routeValues: null, htmlAttributes: new { id = "registerLink" })</li>*@
        <li><a href="/Admin/Account/Login" id="loginLink">Log in</a></li>
    </ul>
}
